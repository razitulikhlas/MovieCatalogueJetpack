plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    androidExtensions {
        experimental = true
    }

    defaultConfig {
        applicationId "com.razit.moviecatalogue"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"15bd1c26c3ee8ac797dc6f96348db0a6\""
        buildConfigField "String", "IMAGES_URL", "\"https://image.tmdb.org/t/p/w500\""
        buildConfigField "String", "LANGUAGE", "\"en-US\""
        buildConfigField "String", "MOVIES", "\"movie\""
        buildConfigField "String", "TVSHOW", "\"tv\""
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

ext{
    appCompatVersion = '1.3.0'
    coreVersion = '1.5.0'
    constraintLayoutVersion = '2.0.4'
    junitVersion = '4.13.2'
    junitExtversion = '1.1.2'
    espressoVersion = '3.3.0'
    androidTestVersion = '1.3.0'
    fragment = '2.3.5'
    materialVersion = '1.3.0'
    recyclerViewVersion = '1.2.1'
    glideVersion = '4.11.0'
    legacySupport = '1.0.0'
    constraintLayoutVersion = '2.0.4'
    koin_version= '3.0.2'
    idlingResource = '3.0.2'
    mockitoVersion = '3.6.0'
    mockitoKotlinVersion = '2.2.0'
    androidTestVersion = '1.3.0'
    androidCoreTestVersion = '2.1.0'
    pagingVersion = '3.0.0'
    room_version = "2.3.0"

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
    //ui
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$fragment"
    implementation "androidx.navigation:navigation-ui-ktx:$fragment"
    implementation "androidx.legacy:legacy-support-v4:$legacySupport"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-android-ext:$koin_version"
    implementation "io.insert-koin:koin-core-ext:$koin_version"

    implementation "com.android.support.test.espresso:espresso-idling-resource:'$idlingResource"
    testImplementation "androidx.arch.core:core-testing:$androidCoreTestVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation 'org.mockito:mockito-inline:3.6.0'
    testImplementation 'androidx.test:core:1.3.0'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"


    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"



    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtversion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"



}